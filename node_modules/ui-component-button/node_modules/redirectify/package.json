{
  "name": "redirectify",
  "version": "1.3.0",
  "description": "A require() plugin for Browserify for overriding a required file based on directory.",
  "main": "index.js",
  "scripts": {
    "test": "mocha test/*"
  },
  "keywords": [
    "browserify",
    "plugin",
    "require",
    "override",
    "directory",
    "browserify-transform"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/lukehansell-hx/redirectify.git"
  },
  "author": {
    "name": "Luke Hansell",
    "email": "luke.hansell@holidayextras.com"
  },
  "license": "BSD-2-Clause",
  "dependencies": {
    "browserify-transform-tools": "^1.3.0"
  },
  "devDependencies": {
    "mocha": "~2.1.0",
    "assert": "~1.3.0"
  },
  "readme": "# Redirectify\n\nA transformer for [Browserify](http://browserify.org) which overrides the required file with the contents of a file of the same name in a specified directory (if such a file exists).\n\nWorks in combination with other transformers such as [hbsfy](https://github.com/epeli/node-hbsfy).\n\n## Installation\n\nUsing npm:\n\n```\nnpm install redirectify browserify --save\n```\n\n## Usage\n\nIn it's simplest form Redirectify requires a specific directory structure when overriding:\n\n    .\n    ├ file.txt\n    ├ overridingDir\n    │ └ file.txt\n\nWhen the top level `file.txt` is required by Browserify `overridingDir/file.txt` is loaded instead.\nUsing the `base` option you can specify entire directories to override. \nIf no override is found then the original is used.\n\n*The file to be overridden and the overriding file must have the same name.*\n\n*If a matching directory or file is not found then the original is used.*\n\n### Options\n\n`dir`  - relative path to the directory containing the overriding file\n\n`base` - [optional] used for specifying the common root for overriding sub directories\n\n\n### Config\n\n#### With Package.json\n\nWhen executing browserify you can specify redirectify as a transformer in your `package.json`:\n\n    {\n      \"name\": \"foo\",\n      ...\n      \"browserify\": {\n        \"transform: [\"redirectify\"]\n      }\n    }\n\nAlso withing your `package.json` you should provide the `overrideDir` as config for redirectify:\n\n    {\n      \"browserify\": ...\n      \"redirectify\": {\n        \"dir\": \"dir/to/nest/to\"\n      }\n    }\n\nFor example for the above directory structure your `package.json` should look like this:\n\n    {\n      \"name\": \"foo\",\n      ...\n      \"browserify\": {\n        transform: [\"redirectify\"]\n      },\n      \"redirectify\": {\n        \"dir\": \"overridingDir\"\n      }\n    }\n    \nFor this example Browserify will now include `./overridingDir/file` instead of `./file`.\n\nIf the specified directory or override file with the same name do not exist then the original\nwill acts as a default.\n\n\n\n#### On the command line\n\nAlternatively you can specify the transform option on the command line:\n\n```\nbrowserify input.js -t [ redirectify --dir overridingDir ] -o output.js\n```\n\nYou can also overwrite the config by using an environment variable:\n\n```\nREDIRECT_DIR=overridingDir browserify input.js -t redirectify  -o output.js\n```\n\n#### Overriding deeply nested files\n\nIf you require the overriding of deeply nested files you can use the `base` option to specify where the redirection\nshould begin.\n\nFor instance, with the following directory structure:\n\n     .\n     ├ project\n     │ ├ src\n     │ │ └ subDir\n     │ │   ├ nestedSubDir\n     │ │   │ └ otherFile.txt\n     │ │   └ file.txt\n     │ └ override\n     │   └ subDir\n     │     ├ nestedSubDir\n     │     │ └ otherFile.txt\n     │     └ file.txt\n     \nAnd the following config:\n\n    {\n      \"name\": \"foo\",\n      ...\n      \"browserify\": {\n        transform: [\"redirectify\"]\n      },\n      \"redirectify\": {\n        \"dir\": \"../override\",\n        \"base\": \"/path/to/project\"\n      }\n    }\n\nRequiring `project/src/subDir/file.txt` will load `project/override/subDir/file.txt`. This works in a nested fashion so\nrequiring `project/src/subDir/nestedSubDir/otherFile.txt` will load `project/override/subDir/nestedSubDir/otherFile.txt`.\n\n## Tests\n\nrun the tests with\n\n```\nnpm test\n```\n\n## Change history\n# 1.3\n- Adds support for overriding contents of subdirectories.\n\n# 1.2\n- Adds support for setting config on the command line with `--dir`.\n\n# 1.1\n- Adds support for setting config using environment variables.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lukehansell-hx/redirectify/issues"
  },
  "_id": "redirectify@1.3.0",
  "_from": "redirectify@^1.2.0"
}
